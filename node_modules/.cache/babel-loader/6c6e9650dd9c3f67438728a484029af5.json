{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport draggable from \"vuedraggable\";\nexport default {\n  name: 'dragTicket',\n  components: {\n    draggable\n  },\n  props: ['ticket'],\n  data: () => ({\n    //   ticketDesk: props.ticket,\n  }),\n  computed: {\n    groupTicket() {\n      // return this.ticket\n      let columns = [{\n        title: \"pending\",\n        tasks: []\n      }, {\n        title: \"accepted\",\n        tasks: []\n      }, {\n        title: \"resolved\",\n        tasks: []\n      }, {\n        title: \"rejected\",\n        tasks: []\n      }];\n      this.ticket.forEach(item => {\n        if (item.status == \"pending\") {\n          columns[0].tasks.push(item);\n        } else if (item.status == \"accepted\") {\n          columns[1].tasks.push(item);\n        } else if (item.status == \"resolved\") {\n          columns[2].tasks.push(item);\n        } else if (item.status == \"rejected\") {\n          columns[3].tasks.push(item);\n        }\n      });\n      return columns;\n    }\n  },\n  methods: {\n    // hookticket () {\n    // axios\n    //     .get('/ticket')\n    //     .then(response => (this.ticket = response.data.Items))\n    //     .catch(error => {this.ticket = error})\n    //     // .finally(() => this.ticket = this.ticket)\n    // },\n  }\n};","map":{"version":3,"mappings":";AA+BA;AACA;EACAA;EACAC;IAAAC;EAAA;EACAC;EACAC;IACA;EACA;EACAC;IACAC;MACA;MACA;QAAAC;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,EACA;MACA;QACA;UAAAC;QAAA,OACA;UAAAA;QAAA,OACA;UAAAA;QAAA,OACA;UAAAA;QAAA;MACA;MACA;IACA;EACA;EAEAC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACA;AACA","names":["name","components","draggable","props","data","computed","groupTicket","title","tasks","columns","methods"],"sourceRoot":"src/components","sources":["dragTicket.vue"],"sourcesContent":["<template>\r\n    <div class=\"p-16\">\r\n        <div class=\"rounded-lg dragArea w-full justify-center ma-16 p-8 text-black drop-shadow-2xl backdrop-blur-md bg-white/60\">\r\n            KU Help-Desk Centeres {{groupTicket}}\r\n            <div class=\"flex justify-center\">\r\n                <div class=\"min-h-screen flex overflow-x-scroll py-12\">\r\n                  <div\r\n                    v-for=\"column in columns\"\r\n                    :key=\"column.title\"\r\n                    class=\"bg-gray-100 rounded-lg px-3 py-3 column-width rounded mr-4\"\r\n                  >\r\n                    <p class=\"text-gray-700 font-semibold font-sans tracking-wide text-sm\">{{column.title}}</p>\r\n                    <!-- Draggable component comes from vuedraggable. It provides drag & drop functionality -->\r\n                    <draggable :list=\"column.tasks\" :animation=\"200\" ghost-class=\"ghost-card\" group=\"tasks\">\r\n                      <!-- Each element from here will be draggable and animated. Note :key is very important here to be unique both for draggable and animations to be smooth & consistent. -->\r\n                      <task-card\r\n                        v-for=\"(task) in column.tasks\"\r\n                        :key=\"task.id\"\r\n                        :task=\"task\"\r\n                        class=\"mt-3 cursor-move\"\r\n                      ></task-card>\r\n                      <!-- </transition-group> -->\r\n                    </draggable>\r\n                  </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import draggable from \"vuedraggable\";\r\n  export default {\r\n    name: 'dragTicket',\r\n    components: {draggable},\r\n    props: ['ticket'],\r\n    data: () => ({\r\n    //   ticketDesk: props.ticket,\r\n    }),\r\n    computed: {\r\n        groupTicket() {\r\n            // return this.ticket\r\n            let columns = [ {title: \"pending\",tasks: []},\r\n                            {title: \"accepted\",tasks: []},\r\n                            {title: \"resolved\",tasks: []},\r\n                            {title: \"rejected\",tasks: []},\r\n                            ]\r\n            this.ticket.forEach((item)=>{\r\n                if(item.status==\"pending\"){(columns[0].tasks).push(item)}\r\n                else if(item.status==\"accepted\"){(columns[1].tasks).push(item)}\r\n                else if(item.status==\"resolved\"){(columns[2].tasks).push(item)}\r\n                else if(item.status==\"rejected\"){(columns[3].tasks).push(item)}\r\n            })\r\n            return columns\r\n        }\r\n    },\r\n\r\n    methods:{\r\n        // hookticket () {\r\n        // axios\r\n        //     .get('/ticket')\r\n        //     .then(response => (this.ticket = response.data.Items))\r\n        //     .catch(error => {this.ticket = error})\r\n        //     // .finally(() => this.ticket = this.ticket)\r\n        // },\r\n    },\r\n  }\r\n  </script>\r\n  \r\n  <style>\r\n  .dragArea{\r\n    height: 720px !important;\r\n  }\r\n  .column-width {\r\n    min-width: 320px;\r\n    width: 320px;\r\n  }\r\n  .ghost-card {\r\n    opacity: 0.5;\r\n    background: #F7FAFC;\r\n    border: 1px solid #4299e1;\r\n  }\r\n  </style>\r\n  "]},"metadata":{},"sourceType":"module"}